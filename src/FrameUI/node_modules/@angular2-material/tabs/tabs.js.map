{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../Users/jelbourn/material2/tmp/broccoli_type_script_compiler-input_base_path-lnaCBdnQ.tmp/0/src/demo-app/components/tabs/tabs.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    ContentChild,\n    Directive,\n    Component,\n    Input,\n    Output,\n    ViewChildren,\n    NgZone,\n    EventEmitter,\n    QueryList,\n    ContentChildren\n} from '@angular/core';\nimport {NgIf, NgFor} from '@angular/common';\nimport {PortalHostDirective} from '@angular2-material/core/portal/portal-directives';\nimport {MdTabLabel} from './tab-label';\nimport {MdTabContent} from './tab-content';\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\nimport {MdInkBar} from './ink-bar';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MdTabChangeEvent {\n  index: number;\n  tab: MdTab;\n}\n\n@Directive({\n  selector: 'md-tab'\n})\nexport class MdTab {\n  @ContentChild(MdTabLabel) label: MdTabLabel;\n  @ContentChild(MdTabContent) content: MdTabContent;\n}\n\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  directives: [PortalHostDirective, MdTabLabelWrapper, MdInkBar, NgIf, NgFor],\n})\nexport class MdTabGroup {\n  /** @internal */\n  @ContentChildren(MdTab) tabs: QueryList<MdTab>;\n\n  @ViewChildren(MdTabLabelWrapper) private _labelWrappers: QueryList<MdTabLabelWrapper>;\n  @ViewChildren(MdInkBar) private _inkBar: QueryList<MdInkBar>;\n\n  private _isInitialized: boolean = false;\n\n  private _selectedIndex: number = 0;\n  @Input()\n  set selectedIndex(value: number) {\n    if (value != this._selectedIndex) {\n      this._selectedIndex = value;\n\n      if (this._isInitialized) {\n        this._onSelectChange.emit(this._createChangeEvent(value));\n      }\n    }\n  }\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /** Output to enable support for two-way binding on `selectedIndex`. */\n  @Output('selectedIndexChange') private get _selectedIndexChange(): Observable<number> {\n    return this.selectChange.map(event => event.index);\n  }\n\n  private _onFocusChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>();\n  @Output('focusChange') get focusChange(): Observable<MdTabChangeEvent> {\n    return this._onFocusChange.asObservable();\n  }\n\n  private _onSelectChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>();\n  @Output('selectChange') get selectChange(): Observable<MdTabChangeEvent> {\n    return this._onSelectChange.asObservable();\n  }\n\n  private _focusIndex: number = 0;\n  private _groupId: number;\n\n  constructor(private _zone: NgZone) {\n    this._groupId = nextId++;\n  }\n\n  /**\n   * Waits one frame for the view to update, then upates the ink bar\n   * Note: This must be run outside of the zone or it will create an infinite change detection loop\n   * TODO: internal\n   */\n  ngAfterViewChecked(): void {\n    this._zone.runOutsideAngular(() => {\n      window.requestAnimationFrame(() => {\n        this._updateInkBar();\n      });\n    });\n    this._isInitialized = true;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  private _updateInkBar(): void {\n    this._inkBar.toArray()[0].alignToElement(this._currentLabelWrapper);\n  }\n\n  /**\n   * Reference to the current label wrapper; defaults to null for initial render before the\n   * ViewChildren references are ready.\n   */\n  private get _currentLabelWrapper(): HTMLElement {\n    return this._labelWrappers && this._labelWrappers.length\n        ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\n        : null;\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._focusIndex;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    this._focusIndex = value;\n\n    if (this._isInitialized) {\n      this._onFocusChange.emit(this._createChangeEvent(value));\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[value].focus();\n    }\n  }\n\n  private _createChangeEvent(index: number): MdTabChangeEvent {\n    const event = new MdTabChangeEvent;\n    event.index = index;\n    if (this.tabs && this.tabs.length) {\n      event.tab = this.tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Returns a unique id for each tab label element\n   * @internal\n   */\n  getTabLabelId(i: number): string {\n    return `md-tab-label-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Returns a unique id for each tab content element\n   * @internal\n   */\n  getTabContentId(i: number): string {\n    return `md-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** Increment the focus index by 1; prevent going over the number of tabs */\n  focusNextTab(): void {\n    if (this._labelWrappers && this.focusIndex < this._labelWrappers.length - 1) {\n      this.focusIndex++;\n    }\n  }\n\n  /** Decrement the focus index by 1; prevent going below 0 */\n  focusPreviousTab(): void {\n    if (this.focusIndex > 0) {\n      this.focusIndex--;\n    }\n  }\n}\n\nexport const MD_TABS_DIRECTIVES = [MdTabGroup, MdTabLabel, MdTabContent, MdTab];\n"]}